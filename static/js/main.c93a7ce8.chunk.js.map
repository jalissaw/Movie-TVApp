{"version":3,"sources":["Components/Navbar.js","Components/Home.js","useFetch.js","Contexts/WatchListContext.js","Contexts/SearchContext.js","Components/ListTemplate.js","Components/Movies.js","Components/TV.js","Components/Watchlist.js","Components/SearchInput.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Home","useFetch","urls","abortCont","AbortController","useState","data","setData","loading","setLoading","isErr","setIsErr","useEffect","requests","map","url","fetch","signal","type","dataType","Promise","all","then","res","r","ok","Error","json","catch","err","name","console","log","message","abort","WatchListContext","React","createContext","WatchListProvider","children","watchList","setwatchList","value","handleClick","title","inArr","find","t","newArr","filter","addPlusSign","Provider","SearchContext","SearchProvider","searchInput","setSearchInput","ListTemplate","props","genre","setPoster","setTitle","setDescription","getYTVideo","useContext","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","style","color","marginLeft","spaceBetween","slidesPerView","width","pagination","clickable","scrollbar","draggable","breakpoints","480","items","item","original_title","toLowerCase","includes","movie","onMouseOver","poster_path","overview","src","height","alt","onClick","id","Movies","process","poster","description","summary","setSummary","modal","setModal","videoTrailer","setVideoTrailer","ytError","setYTError","videoId","split","length","stopAtPeriod","styles","backgroundImage","Spinner","animation","variant","undefined","disablekb","controls","TV","tvPoster","setTVPoster","tvTitle","setTVTitle","tvDescription","setTVDescription","original_name","tv","Watchlist","fontSize","list","SearchInput","location","useLocation","showBar","setShowBar","onSubmit","e","preventDefault","display","pathname","prevState","placeholder","onChange","target","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c93a7ce8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n\r\n\r\n    return (\r\n        <nav className=\"nav-bar\">\r\n            <ul className=\"links\">\r\n                <li className=\"link\"><Link to=\"/\"><i className=\"fas fa-home\"></i></Link></li>\r\n                <li className=\"link\"><Link to=\"/movies\">Movies</Link></li>\r\n                <li className=\"link\"><Link to=\"/tv\">TV</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className='countdown'></div>\r\n            <h1 className=\"home\">Spectacle</h1>\r\n            <h2 className=\"promo\">Take Control of Your Entertainment</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst useFetch = (urls) => {\r\n\r\n    const abortCont = new AbortController()\r\n\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [isErr, setIsErr] = useState(null)\r\n\r\n    useEffect(() => {\r\n\r\n        let requests = urls.map(url => fetch(url, { signal: abortCont.signal }, {\r\n            type: \"GET\",\r\n            dataType: 'json',\r\n        }))\r\n        Promise.all(requests)\r\n            .then(res => {\r\n                const responseOK = res.map(r => r.ok)\r\n                if (!responseOK) {\r\n                    throw Error('The resource can not be displayed at this time');\r\n                }\r\n                return Promise.all(res.map(res => res.json()));\r\n            }).then(data => {\r\n                setData(data)\r\n                setLoading(false)\r\n            }).catch(err => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    setLoading(false)\r\n                    setIsErr(err.message)\r\n                }\r\n\r\n            })\r\n\r\n        return () => abortCont.abort()\r\n    }, [urls]);\r\n\r\n\r\n    return { data, loading, isErr, setData }\r\n}\r\n\r\nexport default useFetch","import React, { useState, useContext } from 'react'\r\n\r\n\r\nexport const WatchListContext = React.createContext()\r\n\r\nexport function WatchListProvider({ children }) {\r\n    const [watchList, setwatchList] = useState([])\r\n\r\n    const handleClick = (title) => {\r\n\r\n        const inArr = watchList.find(t => t === title)\r\n        function addMinusSign() {\r\n            if (inArr) return\r\n            else {\r\n\r\n                setwatchList([...watchList, title])\r\n            }\r\n        }\r\n\r\n        function addPlusSign() {\r\n            if (watchList) {\r\n                const newArr = watchList.filter(t => t !== title)\r\n                setwatchList(newArr)\r\n            }\r\n\r\n        }\r\n        addPlusSign()\r\n        addMinusSign()\r\n    }\r\n\r\n    const value = {\r\n        watchList,\r\n        setwatchList,\r\n        handleClick,\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <WatchListContext.Provider value={value}>\r\n                {children}\r\n            </WatchListContext.Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport const SearchContext = React.createContext()\r\n\r\nexport function SearchProvider({ children }) {\r\n    const [searchInput, setSearchInput] = useState('');\r\n\r\n\r\n    const value = {\r\n        searchInput,\r\n        setSearchInput\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <SearchContext.Provider value={value}>\r\n                {children}\r\n            </SearchContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext';\r\nimport { SearchContext } from '../Contexts/SearchContext';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\nconst ListTemplate = (props) => {\r\n\r\n    const {\r\n        data,\r\n        genre,\r\n        setPoster,\r\n        setTitle,\r\n        setDescription,\r\n        getYTVideo\r\n    } = props\r\n\r\n\r\n    const { watchList, handleClick } = useContext(WatchListContext);\r\n    const { searchInput } = useContext(SearchContext)\r\n\r\n    SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"movies\">\r\n            <h2 style={{ color: 'white', marginLeft: '20px' }}>{genre} </h2>\r\n            {data && <Swiper\r\n                spaceBetween={5}\r\n                slidesPerView={2}\r\n                width={600}\r\n                pagination={{ clickable: true }}\r\n                scrollbar={{ draggable: true }}\r\n\r\n                breakpoints={{\r\n                    480: {\r\n                        slidesPerView: 2,\r\n                    },\r\n                }}\r\n            >\r\n                {data && data.items.filter(item => {\r\n                    if (searchInput === '') {\r\n                        return item\r\n                    } else if (item.original_title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                        return <div className=\"filtered\" >{item}</div>\r\n                    }\r\n                }).map(movie =>\r\n                    <SwiperSlide key={movie.id}>\r\n                        <div className='movie' >\r\n                            <img\r\n                                onMouseOver={() => {\r\n                                    setPoster(`${\"https://image.tmdb.org/t/p/original\" + movie.poster_path}`);\r\n                                    setTitle(movie.original_title);\r\n                                    setDescription(movie.overview);\r\n                                }}\r\n                                src={'https://image.tmdb.org/t/p/original' + movie.poster_path} width='250px' height='300px'\r\n                                alt='Promotional Poster For Movie'\r\n                            />\r\n                            <button className=\"watchlist-btn\"\r\n                                onClick={() => handleClick(movie.original_title)}>\r\n                                {watchList.includes(movie.original_title) ?\r\n                                    <i className=\"fas fa-minus-circle\"></i> :\r\n                                    <i className=\"fas fa-plus-circle\"></i>}\r\n                            </button>\r\n                            <button className=\"watch-trailer-btn\"\r\n                                onClick={() => getYTVideo(movie.original_title)}>\r\n                                Watch Trailer\r\n                            </button>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                )\r\n                }\r\n            </Swiper>}\r\n        </section>);\r\n}\r\n\r\nexport default ListTemplate;","import React, { useState, useEffect, useContext } from 'react';\r\nimport useFetch from '../useFetch';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'swiper/swiper-bundle.css';\r\nimport ListTemplate from './ListTemplate';\r\n\r\n\r\n\r\n\r\nconst Movies = () => {\r\n\r\n    const { data, loading, isErr } = useFetch([\r\n        `https://api.themoviedb.org/3/list/7077601?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078334?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078244?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n    ]);\r\n    const [poster, setPoster] = useState(`giphy (1).gif`);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [summary, setSummary] = useState('')\r\n    const [modal, setModal] = useState(false);\r\n    const [videoTrailer, setVideoTrailer] = useState(null);\r\n    const [ytError, setYTError] = useState(null);\r\n    const [genre, setGenre] = useState(['Action', 'Comedy', 'Award-Winning'])\r\n\r\n    const stopAtPeriod = () => {\r\n        const summary = description.split('.');\r\n        if (summary[0].length <= 15) {\r\n\r\n            setSummary(summary[0] + summary[1] + summary[2] + summary[3])\r\n        } else {\r\n            setSummary(summary[0])\r\n        }\r\n    }\r\n\r\n    const getYTVideo = (title) => {\r\n        fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&q=${title}%20trailer&key=${process.env.REACT_APP_API_YT_KEY}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error('The resource can not be displayed at this time');\r\n                }\r\n                return res.json();\r\n            }).then(data => {\r\n                setVideoTrailer(`https://www.youtube.com/embed/${data.items[0].id.videoId}`);\r\n                setModal(true);\r\n            }).catch(err => {\r\n                setYTError(err.message)\r\n            })\r\n    }\r\n    const closeModal = () => {\r\n        setModal(false)\r\n    }\r\n\r\n    let heightTrans = {\r\n        height: `90%`\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            stopAtPeriod();\r\n        }\r\n\r\n    }, [description])\r\n\r\n\r\n\r\n    const styles = {\r\n        backgroundImage: `url(${poster})`\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='show-container'>\r\n            {isErr && <div className=\"error\">{isErr}</div>}\r\n            {loading && <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" >\r\n                <span>Loading...</span>\r\n            </Spinner>}\r\n            <div className='hero'>\r\n                <div className='show-hero' style={styles}></div>\r\n                <div className=\"contains-descriptions\">\r\n                    <h2 className=\"hero-show-title show-movie\">{title}</h2>\r\n                    <p className=\"hero-show-description show-movie\">{summary === undefined ? '' : summary}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"show-modal\">\r\n                {ytError && <div className=\"yt-error\">{ytError}</div>}\r\n                {modal &&\r\n                    <div className='modal' onClick={closeModal}>\r\n                        <iframe className=\"video\" style={heightTrans} disablekb={0} controls={1} src={videoTrailer}></iframe>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {data &&\r\n                <ListTemplate\r\n                    data={data[0]}\r\n                    setPoster={setPoster}\r\n                    setTitle={setTitle}\r\n                    setDescription={setDescription}\r\n                    genre={genre[0]}\r\n                    getYTVideo={getYTVideo}\r\n                />}\r\n\r\n            {data &&\r\n                <ListTemplate\r\n                    data={data[1]}\r\n                    setPoster={setPoster}\r\n                    setTitle={setTitle}\r\n                    setDescription={setDescription}\r\n                    genre={genre[1]}\r\n                    getYTVideo={getYTVideo}\r\n                />}\r\n\r\n            {data &&\r\n                <ListTemplate\r\n                    data={data[2]}\r\n                    setPoster={setPoster}\r\n                    setTitle={setTitle}\r\n                    setDescription={setDescription}\r\n                    genre={genre[2]}\r\n                    getYTVideo={getYTVideo}\r\n                />}\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext'\r\nimport { SearchContext } from '../Contexts/SearchContext'\r\nimport useFetch from '../useFetch';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\n\r\n\r\nconst TV = () => {\r\n\r\n    const { data, loading, isErr } = useFetch([\r\n        `https://api.themoviedb.org/3/list/7079309?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7079316?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7079317?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    ]);\r\n\r\n\r\n    const [tvPoster, setTVPoster] = useState(`giphy (1).gif`);\r\n    const [tvTitle, setTVTitle] = useState('');\r\n    const [tvDescription, setTVDescription] = useState('');\r\n    const { watchList, handleClick } = useContext(WatchListContext);\r\n    const { searchInput } = useContext(SearchContext);\r\n    const [summary, setSummary] = useState('')\r\n\r\n    const styles = {\r\n        backgroundImage: `url(${tvPoster})`\r\n    };\r\n\r\n    SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n    const stopAtPeriod = () => {\r\n        const summary = tvDescription.split('.');\r\n\r\n        if (summary[0].length <= 15) {\r\n\r\n            setSummary(summary[0] + summary[1] + summary[2] + summary[3])\r\n        } else {\r\n            setSummary(summary[0])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            stopAtPeriod()\r\n        }\r\n    }, [tvDescription])\r\n\r\n\r\n    return (\r\n\r\n        <div className='show-container'>\r\n            {isErr && <div className=\"error\">{isErr}</div>}\r\n            {loading && <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" >\r\n                <span>Loading...</span>\r\n            </Spinner>}\r\n\r\n            <div className='hero'>\r\n                <div className='show-hero' style={styles}></div>\r\n                <div className=\"contains-descriptions\">\r\n                    <h2 className=\"hero-show-title show-movie\">{tvTitle}</h2>\r\n                    <p className=\"hero-show-description show-movie\">{summary}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Cartoons </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={5}\r\n                    slidesPerView={2}\r\n                    width={600}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[0].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>90s Sitcoms </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={5}\r\n                    slidesPerView={2}\r\n                    width={600}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[1].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Popular Shows </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={5}\r\n                    slidesPerView={2}\r\n                    width={600}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[2].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV\r\n","import React, { useContext } from 'react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext';\r\n\r\nfunction Watchlist() {\r\n\r\n    const { watchList } = useContext(WatchListContext)\r\n\r\n    return (\r\n        <div className=\"watchlist-container\">\r\n            <div className=\"watchlist\">\r\n                {watchList.length >= 1 ? <strong style={{ fontSize: '1.4rem' }}> WATCHLIST:</strong> : ''}\r\n                {\r\n                    watchList.map(list => {\r\n                        return <span className=\"watchlist-item\" key={list}> {list}</span>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist\r\n","import React, { useState, useContext } from 'react';\r\nimport { SearchContext } from '../Contexts/SearchContext'\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nexport const SearchInput = () => {\r\n    let location = useLocation();\r\n\r\n\r\n    const { searchInput, setSearchInput } = useContext(SearchContext)\r\n    const [showBar, setShowBar] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <i className=\"fas fa-search\" style={{ display: location.pathname === '/' ? 'none' : 'block' }} onClick={() => setShowBar(prevState => !prevState)}></i>\r\n                <input type='text'\r\n                    className='search-input'\r\n                    name='search-movies'\r\n                    value={searchInput}\r\n                    placeholder='Search...'\r\n                    style={{ width: showBar ? '175px' : '0px' }}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport Home from './Components/Home';\nimport Movies from './Components/Movies';\nimport TV from './Components/TV'\nimport { WatchListProvider } from './Contexts/WatchListContext';\nimport { SearchProvider } from './Contexts/SearchContext';\nimport Watchlist from './Components/Watchlist';\nimport { SearchInput } from './Components/SearchInput';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <WatchListProvider>\n          <Navbar />\n          <SearchProvider>\n            <SearchInput />\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route exact path='/movies'>\n                <Movies />\n              </Route>\n              <Route exact path='/tv'>\n                <TV />\n              </Route>\n            </Switch>\n          </SearchProvider>\n          <Watchlist />\n        </WatchListProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}