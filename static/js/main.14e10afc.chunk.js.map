{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Contexts/WatchListContext.js","Contexts/SearchContext.js","useFetch.js","Components/Movies.js","Components/TV.js","Components/Watchlist.js","Components/SearchInput.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Home","WatchListContext","React","createContext","WatchListProvider","children","useState","watchList","setwatchList","value","handleClick","title","inArr","find","t","newArr","filter","addPlusSign","Provider","SearchContext","SearchProvider","searchInput","setSearchInput","useFetch","urls","data","setData","loading","setLoading","isErr","setIsErr","useEffect","requests","map","url","fetch","type","dataType","Promise","all","then","res","r","ok","Error","json","catch","err","Movies","process","useContext","moviePoster","setmoviePoster","movieTitle","setmovieTitle","movieDescription","setmovieDescription","styles","backgroundImage","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","Spinner","animation","variant","style","color","marginLeft","spaceBetween","slidesPerView","pagination","clickable","scrollbar","draggable","items","item","original_title","toLowerCase","includes","movie","onMouseOver","poster_path","overview","src","width","height","alt","onClick","id","TV","tvPoster","setTVPoster","tvTitle","setTVTitle","tvDescription","setTVDescription","original_name","tv","Watchlist","length","list","SearchInput","showBar","setShowBar","console","log","onSubmit","e","preventDefault","prevState","name","placeholder","onChange","target","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14e10afc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n\r\n\r\n    return (\r\n        <nav className=\"nav-bar\">\r\n            <ul className=\"links\">\r\n                <li className=\"link\"><Link to=\"/\"><i className=\"fas fa-home\"></i></Link></li>\r\n                <li className=\"link\"><Link to=\"/movies\">Movies</Link></li>\r\n                <li className=\"link\"><Link to=\"/tv\">TV</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className='countdown'></div>\r\n            <h1 className=\"home\">Spectacle</h1>\r\n            <h2 className=\"promo\">Take Control of Your Entertainment</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useContext } from 'react'\r\n\r\n\r\nexport const WatchListContext = React.createContext()\r\n\r\nexport function WatchListProvider({ children }) {\r\n    const [watchList, setwatchList] = useState([])\r\n    const [searchInput, setSearchInput] = useState('')\r\n\r\n    const handleClick = (title) => {\r\n\r\n        const inArr = watchList.find(t => t === title)\r\n        function addMinusSign() {\r\n            if (inArr) return\r\n            else {\r\n\r\n                setwatchList([...watchList, title])\r\n            }\r\n        }\r\n\r\n        function addPlusSign() {\r\n            if (watchList) {\r\n                const newArr = watchList.filter(t => t !== title)\r\n                setwatchList(newArr)\r\n            }\r\n\r\n        }\r\n        addPlusSign()\r\n        addMinusSign()\r\n    }\r\n\r\n    const value = {\r\n        watchList,\r\n        setwatchList,\r\n        handleClick,\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <WatchListContext.Provider value={value}>\r\n                {children}\r\n            </WatchListContext.Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport const SearchContext = React.createContext()\r\n\r\nexport function SearchProvider({ children }) {\r\n    const [searchInput, setSearchInput] = useState('');\r\n\r\n\r\n    const value = {\r\n        searchInput,\r\n        setSearchInput\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <SearchContext.Provider value={value}>\r\n                {children}\r\n            </SearchContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst useFetch = (urls) => {\r\n\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [isErr, setIsErr] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let requests = urls.map(url => fetch(url, {\r\n            type: \"GET\",\r\n            dataType: 'json',\r\n        }))\r\n        Promise.all(requests)\r\n            .then(res => {\r\n                const responseOK = res.map(r => r.ok)\r\n                if (!responseOK) {\r\n                    throw Error('The resource can not be displayed at this time');\r\n                }\r\n                return Promise.all(res.map(res => res.json()));\r\n            }).then(data => {\r\n                setData(data)\r\n                setLoading(false)\r\n            }).catch(err => {\r\n                setIsErr(err)\r\n            })\r\n    }, [])\r\n\r\n    return { data, loading, isErr, setData }\r\n}\r\n\r\nexport default useFetch","import React, { useState, useEffect, useContext } from 'react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext'\r\nimport { SearchContext } from '../Contexts/SearchContext'\r\nimport useFetch from '../useFetch';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\nconst Movies = () => {\r\n\r\n    const { data, loading, isErr } = useFetch([\r\n        `https://api.themoviedb.org/3/list/7077601?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078334?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078244?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    ]);\r\n\r\n    const { watchList, handleClick } = useContext(WatchListContext);\r\n    const { searchInput } = useContext(SearchContext)\r\n\r\n\r\n    const [moviePoster, setmoviePoster] = useState(`giphy (1).gif`);\r\n    const [movieTitle, setmovieTitle] = useState('');\r\n    const [movieDescription, setmovieDescription] = useState('');\r\n\r\n\r\n\r\n    const styles = {\r\n        backgroundImage: `url(${moviePoster})`\r\n    };\r\n\r\n\r\n    SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n    return (\r\n\r\n        <div className='show-container'>\r\n            {isErr && <div className=\"error\">{isErr}</div>}\r\n            {loading && <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" >\r\n                <span>Loading...</span>\r\n            </Spinner>}\r\n            <div className='show-hero' style={styles}></div>\r\n            <div className=\"contains-descriptions\">\r\n                <h2 className=\"hero-show-title show-movie\">{movieTitle}</h2>\r\n                <p className=\"hero-show-description show-movie\">{movieDescription}</p>\r\n            </div>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Action </h2>\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={6}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[0].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(movie =>\r\n                        <SwiperSlide key={movie.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setmoviePoster(`${\"https://image.tmdb.org/t/p/original\" + movie.poster_path}`);\r\n                                    setmovieTitle(movie.original_title);\r\n                                    setmovieDescription(movie.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + movie.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(movie.original_title)}>\r\n                                    {watchList.includes(movie.original_title) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Comedy</h2>\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={4}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[1].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n                            return (\r\n\r\n                                <div className=\"movie\" >{item}</div>\r\n\r\n                            )\r\n                        }\r\n                    }).map(movie =>\r\n                        <SwiperSlide key={movie.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={\r\n                                    () => {\r\n                                        setmoviePoster(`${\"https://image.tmdb.org/t/p/original\" + movie.poster_path}`);\r\n                                        setmovieTitle(movie.original_title);\r\n                                        setmovieDescription(movie.overview);\r\n                                    }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + movie.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(movie.original_title)}>\r\n                                    {watchList.includes(movie.original_title) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className='movies'>\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Award-Winning</h2>\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={4}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n\r\n                >\r\n                    {data && data[2].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_title.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(movie =>\r\n                        <SwiperSlide key={movie.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={\r\n                                    () => {\r\n                                        setmoviePoster(`${\"https://image.tmdb.org/t/p/original\" + movie.poster_path}`);\r\n                                        setmovieTitle(movie.original_title);\r\n                                        setmovieDescription(movie.overview);\r\n                                    }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + movie.poster_path}\r\n                                    width='250' height='300' alt='Promotional Poster For Movie'\r\n                                />\r\n\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(movie.original_title)}>\r\n                                    {watchList.includes(movie.original_title) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Movies\r\n","import React, { useState, useContext } from 'react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext'\r\nimport { SearchContext } from '../Contexts/SearchContext'\r\nimport useFetch from '../useFetch';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\n\r\n\r\nconst TV = () => {\r\n\r\n    const { data, loading, isErr } = useFetch([\r\n        `https://api.themoviedb.org/3/list/7079309?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7079316?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7079317?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    ]);\r\n\r\n    const [tvPoster, setTVPoster] = useState(`giphy (1).gif`);\r\n    const [tvTitle, setTVTitle] = useState('');\r\n    const [tvDescription, setTVDescription] = useState('');\r\n    const { watchList, handleClick } = useContext(WatchListContext);\r\n    const { searchInput } = useContext(SearchContext);\r\n\r\n    const styles = {\r\n        backgroundImage: `url(${tvPoster})`\r\n    };\r\n\r\n    SwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n    return (\r\n        <div className='show-container'>\r\n            {isErr && <div className=\"error\">{isErr}</div>}\r\n            {loading && <Spinner animation=\"border\" variant=\"secondary\" className=\"spinner\" >\r\n                <span>Loading...</span>\r\n            </Spinner>}\r\n            <div className='show-hero' style={styles}></div>\r\n            <div className=\"contains-descriptions\">\r\n                <h2 className=\"hero-show-title show-movie\">{tvTitle}</h2>\r\n                <p className=\"hero-show-description show-movie\">{tvDescription}</p>\r\n            </div>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Cartoons </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={3}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[0].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>90s Sitcoms </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={3}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[1].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n            <section className=\"movies\">\r\n                <h2 style={{ color: 'white', marginLeft: '20px' }}>Popular Shows </h2>\r\n\r\n                {data && <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={3}\r\n                    pagination={{ clickable: true }}\r\n                    scrollbar={{ draggable: true }}\r\n                >\r\n                    {data && data[2].items.filter(item => {\r\n                        if (searchInput === '') {\r\n                            return item\r\n                        } else if (item.original_name.toLowerCase().includes(searchInput.toLowerCase())) {\r\n\r\n                            return <div className=\"filtered\" >{item}</div>\r\n                        }\r\n                    }).map(tv =>\r\n                        <SwiperSlide key={tv.id}>\r\n                            <div className='movie' >\r\n                                <img onMouseOver={() => {\r\n                                    setTVPoster(`${\"https://image.tmdb.org/t/p/original\" + tv.poster_path}`);\r\n                                    setTVTitle(tv.original_name);\r\n                                    setTVDescription(tv.overview);\r\n                                }}\r\n                                    src={'https://image.tmdb.org/t/p/original' + tv.poster_path} width='250' height='300'\r\n                                    alt='Promotional Poster For Movie'\r\n                                />\r\n                                <button className=\"watchlist-btn\"\r\n                                    onClick={() => handleClick(tv.original_name)}>\r\n                                    {watchList.includes(tv.original_name) ?\r\n                                        <i className=\"fas fa-minus-circle\"></i> :\r\n                                        <i className=\"fas fa-plus-circle\"></i>}\r\n                                </button>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                    }\r\n                </Swiper>}\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV\r\n","import React, { useContext } from 'react';\r\nimport { WatchListContext } from '../Contexts/WatchListContext';\r\n\r\nfunction Watchlist() {\r\n\r\n    const { watchList } = useContext(WatchListContext)\r\n\r\n    return (\r\n        <div className=\"watchlist-container\">\r\n            { watchList.length >= 1 ? <strong> WATCHLIST:</strong> : ''}\r\n            {\r\n                watchList.map(list => {\r\n                    return <span className=\"watchlist-item\" key={list}> {list}</span>\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist\r\n","import React, { useState, useContext } from 'react';\r\nimport { SearchContext } from '../Contexts/SearchContext'\r\nimport useFetch from '../useFetch';\r\n\r\n\r\nexport const SearchInput = () => {\r\n\r\n    const { data } = useFetch([\r\n        `https://api.themoviedb.org/3/list/7077601?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078334?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`,\r\n        `https://api.themoviedb.org/3/list/7078244?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    ])\r\n\r\n    const { searchInput, setSearchInput } = useContext(SearchContext)\r\n    const [showBar, setShowBar] = useState(false)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    console.log(showBar)\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <i className=\"fas fa-search\" onClick={() => setShowBar(prevState => !prevState)}></i>\r\n                <input type='text'\r\n                    className='search-input'\r\n                    name='search-movies'\r\n                    value={searchInput}\r\n                    placeholder='Search...'\r\n                    style={{ width: showBar ? '175px' : '0px' }}\r\n                    onChange={(e) => setSearchInput(e.target.value)}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport Home from './Components/Home';\nimport Movies from './Components/Movies';\nimport TV from './Components/TV'\nimport { WatchListProvider } from './Contexts/WatchListContext';\nimport { SearchProvider } from './Contexts/SearchContext';\nimport Watchlist from './Components/Watchlist';\nimport { SearchInput } from './Components/SearchInput';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <WatchListProvider>\n          <Navbar />\n          <SearchProvider>\n            <SearchInput />\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route exact path='/movies'>\n                <Movies />\n              </Route>\n              <Route exact path='/tv'>\n                <TV />\n              </Route>\n            </Switch>\n          </SearchProvider>\n          <Watchlist />\n        </WatchListProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}